#
# igia docs application template for OpenShift.
#
# This defines all the configurable parameters and other objects that are needed to run the igia-docs application
# service. This template can even be saved in OpenShift namespace as well so that have the flexibility to do any project specific
# customizations. Pls note wherever displayName says *** PLEASE DO NOT CHANGE THIS ***, don't touch that as those parameters will be
# referenced in other places.
#
# This template is mostly based on template generated by JHipster.

apiVersion: v1
kind: Template
metadata:
  name: igia-docs-template
  annotations:
    description: This template defines objects that are required to spin up an igia-docs service pod
    tags: igia-docs, service
    openshift.io/display-name: igia-docs-template
    openshift.io/long-description: This template provides objects that are required to spin up a igia-docs service pod.
labels:
  app: igia-docs
parameters:
  -
    name: APPLICATION_NAME
    value: igia-docs
    description: Name of the application
    required: true
    displayName: Application Name
  -
    name: APP_PORT
    value: "8080"
    description: Port of the application
    required: true
    displayName: "*** PLEASE DO NOT CHANGE THIS ***"
  -
    name: DOCKER_IMAGE
    description: Docker image Source
    required: true
    displayName: "Docker image to be used"
  -
    name: HOST_NAME
    value: ""
    description: Host name for the route
    required: true
    displayName: "Host name to be used for the route"

  -
    name: IMAGE_AUTO_IMPORT_ENABLED
    value: "true"
    description: >
     Flag that controls where Docker image is scheduled for auto import or not
    required: true
    displayName: "Enable periodic auto import of Docker image"
objects:
  -
    apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tags:
      - from:
          kind: DockerImage
          name: ${DOCKER_IMAGE}
        importPolicy: 
          scheduled: "${{IMAGE_AUTO_IMPORT_ENABLED}}"
        name: latest
        referencePolicy:
          type: Source
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources:
      replicas: 1
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}
        spec:
          containers:
          - name: ${APPLICATION_NAME}
            image: ""
            imagePullPolicy: IfNotPresent

            ports:
            - name: http
              containerPort: "${{APP_PORT}}"

      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
  -
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      selector:
        app: ${APPLICATION_NAME}
      type: LoadBalancer
      ports:
      - name: http
        port: "${{APP_PORT}}"

  -
    apiVersion: v1
    kind: Route
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOST_NAME}
      tls:
        termination: edge
      to:
        kind: Service
        name: ${APPLICATION_NAME}
        weight: 100
      port:
        targetPort: "http"
      wildcardPolicy: None

