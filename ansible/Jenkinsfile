#!/usr/bin/env groovy

// This pipeline runs Ansible playbook to fetch component documentation from Git projects
@Library('igia-shared-jenkins-library') _

def buildProps = [:]
 
pipeline {
    agent { label 'ansible' }

    options {
        disableConcurrentBuilds()
        timeout(time: 1, unit: 'HOURS')
        ansiColor('xterm')
    }

    parameters {
        string(name: 'GIT_API_CRED_ID', defaultValue: 'GIT_TOKEN_DOCS', description: 'Credential ID for Git access')
        string(name: 'EMAIL_RECIPIENTS', defaultValue: '', description: 'Recipients of email notification')
        booleanParam(name: 'COMMIT_CHANGES', defaultValue: true, description: 'Also push changes to Git?')
    }

    triggers {
        cron('H */4 * * *')
    }

    stages {
        stage('Collect Component Documentation') {
            steps{
                dir('ansible'){
                    withCredentials([string(credentialsId: "${params.GIT_API_CRED_ID}", variable: 'GIT_TOKEN')]) {
                        ansiblePlaybook extras: '-e {\\"git_token\\":\\"$GIT_TOKEN\\"}', playbook: 'roles/components/tasks/main.yml'
                    }
                }
            }
        }

        stage('Commit changes to Git') {
            when { expression { return params.COMMIT_CHANGES } }
            steps{
                sh "[[ -z \$(git status -s 2> /dev/null) ]] || (git config user.name jenkins && \
                    git config user.email igia@partnershealthcare.onmicrosoft.com && \
                    git config push.default simple && git add --all . && \
                    git commit -m 'Auto update of component documentation' && \
                    git push origin HEAD:\${GIT_BRANCH})"
            }
        }
    }
    post {
        always {
            notifyEmail("${EMAIL_RECIPIENTS}")
        } 
    }
}
